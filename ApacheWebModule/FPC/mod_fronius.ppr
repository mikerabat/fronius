Library mod_fronius;

{$mode objfpc}{$H+}

Uses
{$ifdef unix}
  cthreads,
{$endif}
  SysUtils, CustApp, httpd24, interfaces, custapache24, fpApache24, froniusDataMod, pl_firebirddb,
  Fronius.ModuleInit, dl;

Const

{ The following constant is used to export the module record. It must 
  always match the name in the LoadModule statement in the apache
  configuration file(s). It is case sensitive !}
  ModuleName='fronius_module';

{ The following constant is used to determine whether the module will
  handle a request. It should match the name in the SetHandler statement
  in the apache configuration file(s). It is not case sensitive. }

  HandlerName='mod_fronius-handler';

type
  PModule = ^module;

Var
  DefaultModule : module; {$ifdef unix} public name ModuleName;{$endif unix}
  refMod : PModule;
  dlHdl : Pointer;

  Exports defaultmodule name ModuleName;

{$R *.res}

begin
  // get global reference to DefaultModule -> don't know if that is sufficint...
  // a direct reference to DefaultModule is forbidden by the linker!
  dlHdl := dlopen(nil, RTLD_GLOBAL);
  refMod := dlsym(dlHdl, ModuleName);


  Application.Title:='mod_fronius';
  Application.ModuleName:=ModuleName;
  Application.HandlerName:=HandlerName;
  Application.LegacyRouting := true;
  Application.SetModuleRecord(refMod^);
  InitModule;
  Application.Initialize;
end.

